networks:
  shared_network:
    external: true
  laravel:
    driver: bridge
    ipam:
      config:
        - subnet: 172.29.0.0/16

x-php-common: &php-common
  build:
    context: ./docker/php
    dockerfile: Dockerfile
    args:
      - UID=${UID:-1000}
      - GID=${GID:-1000}
      - USER=${USER:-laravel}
  user: "${UID}:${GID}"
  volumes:
    - ./src:/var/www/html:z
    - .env:/var/www/html/.env
  networks:
    - laravel
    - shared_network
  restart: always

services:
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    restart: always
    container_name: nginx_lukisa
    ports:
      - "8000:8000"
    volumes:
      - ./src:/var/www/html:z
      - .env:/var/www/html/.env
    depends_on:
      - php
    networks:
      - laravel
      - shared_network

  php:
    <<: *php-common # Herda a configuração comum
    container_name: php_lukisa
    depends_on:
      - redis
    ports:
      - "9000:9000"
      - "8080:8080"
    volumes: # Adiciona volumes específicos
      - ./src:/var/www/html:z
      - .env:/var/www/html/.env
      - ./docker/php/custom.ini:/usr/local/etc/php/conf.d/custom.ini
    devices:
      - /dev/dri:/dev/dri

  artisan:
    <<: *php-common
    container_name: artisan_lukisa
    working_dir: /var/www/html
    profiles: ["artisan"]
    entrypoint: ['php', '/var/www/html/artisan']
    restart: "no" # Artisan não precisa de restart

  composer:
    <<: *php-common
    container_name: composer_lukisa
    working_dir: /var/www/html
    profiles: ["composer"]
    entrypoint: ['composer']
    restart: "no"

  node:
    build:
      context: ./docker/node
      dockerfile: Dockerfile
    container_name: node_lukisa
    user: "${UID}:${GID}"
    volumes:
      - ./src:/var/www/html:z
      - .env:/var/www/html/.env
    ports:
      - 3000:3000
      - 3001:3001
      - 5173:5173
    working_dir: /var/www/html
    profiles: ["node"]
    networks:
      - laravel
      - shared_network

  redis:
    image: redis:7.2-alpine
    container_name: redis_lukisa
    restart: unless-stopped
    ports:
      - "6378:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    sysctls:
      - net.core.somaxconn=1024
    volumes:
      - redis_data:/data
    networks:
      - laravel
      - shared_network

volumes:
  redis_data:
    driver: local