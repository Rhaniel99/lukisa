networks:
  shared_net:
    name: shared_network
    driver: bridge
    external: true
  laravel:
    driver: bridge
    ipam:
      config:
        - subnet: 172.29.0.0/16

x-php-common: &php-common
  image: lukisa-php:latest
  build:
    context: ./docker/php
    dockerfile: Dockerfile
    args:
      - UID=${UID:-1000}
      - GID=${GID:-1000}
      - USER=${USER:-laravel}
  user: "${UID}:${GID}"
  volumes:
    - ./src:/var/www/html:z
    - .env:/var/www/html/.env
  working_dir: /var/www/html
  networks:
    - laravel
    - shared_net
  restart: always

services:
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    restart: always
    container_name: nginx_lukisa
    ports:
      - "8585:8000"
    volumes:
      - ./src:/var/www/html:z
      - .env:/var/www/html/.env
    depends_on:
      php:
        condition: service_started
      reverb:
        condition: service_started
      redis:
        condition: service_healthy
    networks:
      - laravel

  php:
    <<: *php-common # Herda a configuração comum
    container_name: php_lukisa
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./src:/var/www/html:z
      - .env:/var/www/html/.env
      - ./docker/php/custom.ini:/usr/local/etc/php/conf.d/custom.ini
    devices:
      - /dev/dri:/dev/dri

  artisan:
    <<: *php-common
    container_name: artisan_lukisa
    profiles: ["artisan"]
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./src:/var/www/html:z
      - .env:/var/www/html/.env
    entrypoint: ['php', 'artisan']
    restart: "no"

  composer:
    <<: *php-common
    container_name: composer_lukisa
    profiles: ["composer"]
    volumes:
      - ./src:/var/www/html:z
      - .env:/var/www/html/.env
    entrypoint: ['composer']
    restart: "no"

  reverb:
    <<: *php-common
    container_name: reverb_lukisa
    ports:
      - "8080:8080"
    volumes:
      - ./src:/var/www/html:z
      - .env:/var/www/html/.env
    depends_on:
      php:
        condition: service_started
      redis:
        condition: service_healthy
    command: php artisan reverb:start --host=0.0.0.0 --port=8080

  horizon:
    <<: *php-common
    container_name: horizon_lukisa
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./src:/var/www/html:z
      - .env:/var/www/html/.env
    command: php artisan horizon
    devices:
      - /dev/dri:/dev/dri

  scheduler:
    <<: *php-common
    container_name: scheduler_lukisa
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./src:/var/www/html:z
      - .env:/var/www/html/.env
    command: php artisan schedule:work

  node:
    build:
      context: ./docker/node
      dockerfile: Dockerfile
    container_name: node_lukisa
    user: "${UID}:${GID}"
    volumes:
      - ./src:/var/www/html:z
      - .env:/var/www/html/.env
    ports:
      - 3000:3000
      - 3001:3001
      - 5173:5173
    working_dir: /var/www/html
    profiles: ["node"]
    networks:
      - laravel

  redis:
    image: redis:7.2-alpine
    container_name: redis_lukisa
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    sysctls:
      - net.core.somaxconn=1024
    volumes:
      - redis_data:/data
    networks:
      - laravel
      - shared_net
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  redis_data:
    driver: local